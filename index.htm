<!DOCTYPE html>
<html lang="de">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
	
	<title>htmltocan</title>	
	
	<style>	
	body{
		font-family:Verdana;
		font-size:11px;
	}
	#quellhtml{
		text-align:left;
		color:#449955;
		background-color:#ffddee;
	}
	p{
		background-color:#222222;
		color:#fff;
		padding:5px;
	}	
	h1{background-color:rgba(255,255,128,0.2)}
	imput{border-color:#000000;}
	</style>
	
	<script type="module">
		import { htmltocanvas } from './script.js';	

		const drawing=function(){
			htmltocanvas({
			"canvas":document.getElementById("zielcanvas"),
			"quelle":document.getElementById("quellhtml")
			});
		}
		
		const changeInput=function(){
			drawing();
		}

		const setup=function(){
			drawing();
			var node=document.getElementById("rb1");
			node.addEventListener("change",changeInput);
			node=document.getElementById("rb2");
			node.addEventListener("change",changeInput);
			node=document.getElementById("rb3");
			node.addEventListener("change",changeInput);
			node=document.getElementById("inptxt");
			node.addEventListener("keyup",changeInput);
			node.addEventListener("change",changeInput);
		}

		window.addEventListener('load',function(e){setup()});
		
	</script>

	
</head>

<body id="thebody">
<canvas id="zielcanvas" width="700" height="400"></canvas>

<!-- transform:scale(0)-->
<div id="quellhtml" style="width:555px;position:relative">
<h1>Test 1</h1>
<p>Um HTML auf einen Canvas zu rendern, gibt es mehrere Möglichkeiten:</p>

<p style="width:50%">drawImage() Methode: Sie<br>können die drawImage()-Methode des Canvas-Elements verwenden, um ein HTML-Element auf den Canvas zu rendern.</p>
<p>toDataURL() Methode: Eine <b>weitere</b> Möglichkeit besteht darin, das HTML-Element in ein Bild zu konvertieren und dann die toDataURL()-Methode des Canvas-Elements zu verwenden, um das Bild auf den Canvas zu rendern. Beispiel:</p>

<img src="fischsw1.png" width="50">
	<div style="position:absolute;background-color:#990099;right:50px;top:100px;color:#fff;padding:10px;border-radius: 10px;">1234</div>

<input type="text" value="Input" id="inptxt"> 
<input type="checkbox" value="Input"  name="r1" id="rb3">
<input type="radio" value="Input" checked="1" name="r1" id="rb1"> <label for="rb1" style="color:#000">1234</label>
<input type="radio" value="Input" name="r1" id="rb2"> <label for="rb2" style="color:#000">1234</label>

<p>toDataURL() Methode: Eine weitere Möglichkeit besteht darin, das HTML-Element in ein Bild zu konvertieren und dann die toDataURL()-Methode des Canvas-Elements zu verwenden, um das Bild auf den Canvas zu rendern. 
<b>Beispiel  1234</b> fubar</p>

	<p>1.Zeile wer <b style="background-color:#990000;color:#ffff22">fett</b> 1234<br>wer.</p>
	
</div>



</body>
</html>
